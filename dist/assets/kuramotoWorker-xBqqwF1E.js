(function(){"use strict";const O=(t,e,n)=>Math.max(e,Math.min(n,t)),Q=t=>O(t,0,1),b=t=>{let e=t;for(;e>Math.PI;)e-=2*Math.PI;for(;e<=-Math.PI;)e+=2*Math.PI;return e},w=(t,e,n,o)=>{const r=(t%n+n)%n;return(e%o+o)%o*n+r},B=(t,e)=>{const n=t*e;return{width:t,height:e,Zr:new Float32Array(n),Zi:new Float32Array(n)}},U=(t,e)=>t*e*4*Float32Array.BYTES_PER_ELEMENT,z=(t,e,n)=>{const o=e*n,r=new Float32Array(t),a=r.subarray(0,o),i=r.subarray(o,o*2),c=r.subarray(o*2,o*3),d=r.subarray(o*3,o*4);return{gradX:a,gradY:i,vort:c,coh:d}},S=(t,e,n)=>{const{width:o,height:r,Zr:a,Zi:i}=t;for(let c=0;c<r;c++)for(let d=0;d<o;d++){const k=2*Math.PI*e*d/o,h=c*o+d;a[h]=Math.cos(k),i[h]=Math.sin(k)}},E=(t,e,n,o)=>{const{width:r,height:a,Zr:i,Zi:c}=t,{alphaKur:d,gammaKur:k,omega0:h,K0:s,epsKur:l}=e,f=Math.cos(d),y=Math.sin(d);for(let p=0;p<a;p++)for(let M=0;M<r;M++){const m=p*r+M,g=w(M-1,p,r,a),H=w(M+1,p,r,a),K=w(M,p-1,r,a),N=w(M,p+1,r,a),F=.2*(i[m]+i[g]+i[H]+i[K]+i[N]),A=.2*(c[m]+c[g]+c[H]+c[K]+c[N]),I=i[m],Z=c[m],X=I*I-Z*Z,_=2*I*Z,ct=f*F+y*A,it=-y*F+f*A,G=F,L=-A,V=X*G-_*L,$=X*L+_*G,ht=f*V-y*$,lt=y*V+f*$,ut=-k*I-h*Z+.5*s*(ct-ht),dt=-k*Z+h*I+.5*s*(it-lt),J=Math.sqrt(Math.max(n*l,0));i[m]=I+n*ut+J*o(),c[m]=Z+n*dt+J*o()}},R=(t,e)=>{const{width:n,height:o,Zr:r,Zi:a}=t,{gradX:i,gradY:c,vort:d,coh:k}=e,h=s=>Math.atan2(a[s],r[s]);for(let s=0;s<o;s++)for(let l=0;l<n;l++){const f=s*n+l,y=w(l-1,s,n,o),p=w(l+1,s,n,o),M=w(l,s-1,n,o),m=w(l,s+1,n,o);i[f]=.5*b(h(p)-h(y)),c[f]=.5*b(h(m)-h(M)),k[f]=Q(Math.hypot(r[f],a[f]))}for(let s=0;s<o;s++)for(let l=0;l<n;l++){const f=s*n+l,y=w(l+1,s,n,o),p=w(l+1,s+1,n,o),M=w(l,s+1,n,o),m=b(h(y)-h(f)),g=b(h(p)-h(y)),H=b(h(M)-h(p)),K=b(h(f)-h(M));d[f]=(m+g+H+K)/(2*Math.PI)}},W=t=>{let e=t>>>0;return()=>{e+=1831565813;let n=Math.imul(e^e>>>15,1|e);return n^=n+Math.imul(n^n>>>7,61|n),((n^n>>>14)>>>0)/4294967296}},q=t=>{const e=t==null?Math.random:W(t);let n=null;return()=>{if(n!=null){const d=n;return n=null,d}let o=0,r=0;for(;o===0;)o=e();for(;r===0;)r=e();const a=Math.sqrt(-2*Math.log(o)),i=a*Math.cos(2*Math.PI*r);return n=a*Math.sin(2*Math.PI*r),i}},C=self;let u=null,x=null,T=q(),P=[],Y=0,j=0;const v=(t,e)=>{e?C.postMessage(t,e):C.postMessage(t)},tt=(t,e)=>{(!u||u.width!==t||u.height!==e)&&(u=B(t,e))},D=t=>{T=q(t)},et=()=>P.shift()??null,nt=t=>{P.push(t)},ot=t=>{if(!u||!x)return;const e=et();if(!e){v({kind:"log",message:"[kur-worker] dropping frame: buffer pool empty"});return}E(u,x,t.dt,T);const n=z(e,u.width,u.height);R(u,n),v({kind:"frame",buffer:e,timestamp:t.timestamp,frameId:t.frameId,queueDepth:P.length},[e])},rt=t=>{Y=t.width,j=t.height,x={...t.params},tt(Y,j),D(t.seed),P=[...t.buffers],u&&(S(u,t.qInit),v({kind:"ready",width:u.width,height:u.height}))},at=t=>{u&&(D(t.seed),S(u,t.qInit))},st=t=>{const e=B(t.width,t.height),n={...t.params},o=q(t.seed);S(e,t.qInit);const r=U(t.width,t.height),a=[];for(let i=0;i<t.frameCount;i++){E(e,n,t.dt,o);const c=new ArrayBuffer(r),d=z(c,t.width,t.height);R(e,d),a.push(c)}v({kind:"simulateResult",buffers:a,width:t.width,height:t.height,frameCount:t.frameCount},a)};C.onmessage=t=>{const e=t.data;switch(e.kind){case"init":rt(e);break;case"tick":ot(e);break;case"updateParams":x={...e.params};break;case"reset":at(e);break;case"returnBuffer":nt(e.buffer);break;case"simulate":st(e);break;default:v({kind:"log",message:`[kur-worker] unhandled message ${e==null?void 0:e.kind}`});break}}})();
